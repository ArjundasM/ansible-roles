---
#Creating namenode directory in namenode server
- name: Creating namenode directory in namenode
  file:
    path: "{{ hadoop_store_dir }}/hdfs/namenode"
    state: directory
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0755
    recurse: yes
  when: ansible_fqdn == hadoop_namenode

#Creating datanode directory in all datanode servers
- name: Creating datanode directory
  file: 
    path: "{{ hadoop_store_dir }}/hdfs/datanode"
    state: directory
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0755
    recurse: yes
  when: ansible_fqdn != hadoop_namenode

#Creating temporary directory in all servers
- name: Creating temporaray directory
  file:
    path: "{{ hadoop_store_dir }}/tmp"
    state: directory
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0755
    recurse: yes

#Copying core-site file to all servers
- name: Copying core-site file
  template:
    src: core-site.xml.j2
    dest: "{{ hadoop_home_dir }}/etc/hadoop/core-site.xml"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0644

#Copying hdfs-site file for namenode
- name: Copying hdfs-site file for namenode
  template:
    src: hdfs-site.xml-namenode.j2
    dest: "{{ hadoop_home_dir }}/etc/hadoop/hdfs-site.xml"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0644
  when: ansible_fqdn ==  hadoop_namenode

#Copying hdfs-site file for datanodes
- name: Copying hdfs-site file for datanode
  template:
    src: hdfs-site.xml-datanode.j2
    dest: "{{ hadoop_home_dir }}/etc/hadoop/hdfs-site.xml"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0644
  when: ansible_fqdn != hadoop_namenode

#Copying slaves file to namenode
- name: Copying slave file
  template:
    src: slaves
    dest: "{{ hadoop_home_dir }}/etc/hadoop/slaves"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0644
  when: ansible_fqdn == hadoop_namenode

#Adding java home to hadoop-env file of all servers
- name: Adding java_home to hadoop-env file
  lineinfile:
    dest: "{{ hadoop_home_dir }}/etc/hadoop/hadoop-env.sh"
    regexp: "JAVA_HOME="
    line: "export JAVA_HOME={{ item }}"
  with_first_found:
    - /usr/lib/jvm/java-8-oracle
    - /usr/lib/jvm/java-8-openjdk-amd64
    - /usr/lib/jvm/java-7-openjdk-amd64
    - /usr/lib/jvm/jre-1.7.0

